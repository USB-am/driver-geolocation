# -*- coding: utf-8 -*-

import socket
import time

class User:

	def __init__(self, user_name, host='localhost', port=10024):

		self.user_name = user_name
		self.host = host
		self.port = port


	def enterApp(self, login, password):

		# Hello = True	# Temp row

		try:
			temp_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			temp_sock.connect((self.host, self.port))

			enterForm = ('check_log_in', (login, password))
			temp_sock.send(str(enterForm).encode())

			data = temp_sock.recv(64)

			temp_sock.close()

			if eval(data.decode()):
				sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
				sock.connect((self.host, self.port))

				return sock

		except ConnectionRefusedError:
			print('Connect Error!')

		return False


	def sign_up(self, name, email, password, car='Неизестно'):

		try:
			temp_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
			temp_sock.connect((self.host, self.port))

			sign_upForm = ('sign_up', (name, email, password, car))
			temp_sock.send(str(sign_upForm).encode())

			data = temp_sock.recv(64)

			temp_sock.close()

			if eval(data.decode()):
				sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
				sock.connect((self.host, self.port))

				return sock

		except ConnectionRefusedError:
			print('Connect Error!')


	def send_mail(self, sock, from_, to, text):

		messageForm = ('send_mail', (from_, to, text))
		print(messageForm.__sizeof__())
		sock.send(str(messageForm).encode())


	def get_my_geolocation(self, sock):

		def pc_geolocation():

			import geocoder

			g = geocoder.ip('me')
			lat = float(g.json['lat'])
			lng = float(g.json['lng'])

			return (lat, lng)


		def android_geolocation():

			import androidhelper

			droid = androidhelper.Android()
			droid.startLocating()

			time.sleep(3)
			result = droid.readLocation()

			try:
				lat = result[1]['network']['latitude']
				lng = result[1]['network']['longitude']

				return (lat, lng)

			except KeyError:
				return False

		user_os = 'windows'

		if user_os == 'windows':	my_geo = pc_geolocation()
		elif user_os == 'linux':	my_geo = android_geolocation()

		geolocationForm = ('new_geolocation', (user_name, 'Test route name', *my_geo))

		try:
			sock.send(str(geolocationForm).encode())

		except AttributeError:
			print('Send error!')


	def create_new_route(self, sock, driver, route_name, from_, to):

		createdForm = ('create_new_route', (driver, route_name, from_, to))
		sock.send(str(createdForm).encode())


if __name__ == '__main__':
	global user_name

	user_name = 'Usbam'
	usr = User(user_name)

	log_in = usr.enterApp('usbam.usbam@mail.ru', '123')

	if not log_in:
		log_in = usr.sign_up(user_name, 'usbam.usbam@mail.ru', '123')

	try:
		new_message = usr.send_mail(
			log_in,
			user_name,
			'Ivanov Ivan',
			'Hello User!!!'
		)

	except AttributeError:
		print('Connection Error')

	while True:
		print(usr.get_my_geolocation(log_in))
		time.sleep(1)

	# usr.create_new_route(log_in, user_name, 'Rostov-Moscow', (47, 37), (48, 38))

	# input(':')
